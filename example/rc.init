#!/bin/sh

if [ "$1" = "-noinit" ]; then
	# protect against exec'd instance of rund
	exit 0;
fi

# systemwide settings
umask 002
export PATH=/usr/local/sbin:/usr/sbin:/sbin:/usr/local/bin:/usr/bin:/bin

echo "[`ktstamp`] Start system ..."

# push environment into rund
runc -q env PATH="$PATH"
if [ -f /etc/environment ]; then
	. /etc/environment
	sed -e "/^#/d" -e "/^$/d" /etc/environment | xargs -L1 -d\\n runc -q env
fi

# set reboot behaviour
ctrlaltdel soft

# mount necessary filesystems
mount -n nodev /sys -t sysfs
mount -n nodev /proc -t proc

# mount + stuff /dev
if ! grep " /dev " /proc/mounts > /dev/null; then
	# no /dev mounted yet.
	echo "[`ktstamp`] Mount /dev ..."
	mount -n nodev /dev -t devtmpfs -o size=10M,mode=0755
fi

## clean kernel configured hotplug program
echo "" > /proc/sys/kernel/hotplug

# stuff /dev
{
	# Shared memory
	mkdir /dev/shm
	mount nodev /dev/shm -t tmpfs
	chmod a+w,+t /dev/shm

	# PTS
	mkdir /dev/pts
	mount -n nodev /dev/pts -t devpts
} &

# configure some fixed network stuff
{
	hostname -F /etc/HOSTNAME
	ip link set lo up
} &

{
	if [ -f /var/cache/random-seed ]; then 
		echo "[`ktstamp`] Set random seed"
		cat /var/cache/random-seed > /dev/urandom
	fi

} &

echo "[`ktstamp`] Start filesystems ..."
# mount / read-write
mount -n / -o remount,rw

# fix /tmp
{
	rm -rf /tmp
	mkdir /tmp
	chmod 01777 /tmp
} &

{
	while test ! -c /dev/rtc0; do sleep 0.25; done
	echo "[`ktstamp`] Restore system clock"j
	hwclock -su
} &

mount nodev /run -t tmpfs
# or you could clean up /var/run
#find /var/run -type f -name *.pid | xargs rm -f &
#find /var/run -type s | xargs rm -f &

# synchronization point
wait
# READY

# you could spawn all S* scripts in /etc/run.d parallel
#echo "[`ktstamp`] Start /etc/run.d/ ..."
#for FILE in /etc/run.d/S*; do
#	$FILE start &
#done
#
## wait on all scripts
#wait

# or you could place it all inline here...
echo "[`ktstamp`] Start syslog ..."
# syslog
runc add syslogd -r -n
runc add klogd -n

echo "[`ktstamp`] Start logins ..."
# virtual terminals
runc add TERM=linux logind /dev/tty2 /dev/tty3 /dev/tty4 /dev/tty5 /dev/tty6

echo "[`ktstamp`] Start Xorg session ..."
## Xorg
runc add USER=kurt xinit

echo "[`ktstamp`] Start SSH ..."
## ssh
mkdir -p -m 0755 /var/run/sshd
runc add /usr/sbin/sshd -D

echo "[`ktstamp`] Start network ..."
#rm /var/run/ifplugd*
## networks
runc add ifplugd -i lan -u1 -d0 --no-daemon --ignore-fail
iw reg set BE &
runc add wpa_supplicant -iwlan0 -c /etc/wpa_supplicant.conf
runc add ifplugd -i wlan0 -u1 -d3 --no-daemon --no-syslog --ignore-fail

inetd -d
runc add acpid -f

echo "[`ktstamp`] system up"
